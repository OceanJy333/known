# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_API_BASE_URL=https://api.openai.com/v1

# Optional: Set model for document analysis
OPENAI_MODEL=gpt-4o-mini

# AI Prompt Configuration
# System prompt for document analysis
OPENAI_SYSTEM_PROMPT="你是一个专业的文档分析助手，擅长提取文档结构和生成目录。请直接返回JSON数组，不要包含其他解释文字。"

# User prompt template (use {fileType} and {content} as placeholders)
OPENAI_USER_PROMPT="分析{fileType}文档，将其分解为3-6个段落并生成总结。返回JSON对象，包含segments数组。\n\n要求：\n1. 按逻辑主题分解文档\n2. 生成简洁标题(10-25字)\n3. 写1句话总结概括核心内容\n4. 准确找到每个段落开始位置的前8-12个连续字符作为锚点(必须是原文中确实存在的字符)\n5. 锚点不能包含换行符、标点符号，应该是纯文字内容\n\n文档内容：\n{content}\n\n返回格式(确保JSON有效)：\n{\n  \"segments\": [\n    {\n      \"title\": \"段落标题\",\n      \"level\": 1,\n      \"summary\": \"一句话总结\",\n      \"anchor\": \"段落开始的连续文字\"\n    }\n  ]\n}"

# Content truncation settings
OPENAI_MAX_CONTENT_LENGTH=8000
OPENAI_TRUNCATION_MESSAGE="...(内容过长已截断)"

# Agent Chat Mode Prompt Configuration (Enhanced SEARCH/REPLACE Format)
# System prompt for Agent mode - uses advanced SEARCH/REPLACE diff format
# Leave empty to use the default enhanced prompt with detailed formatting rules
OPENAI_AGENT_SYSTEM_PROMPT=""

# Diff Generation Configuration
# 内容价值判断阈值 (1-10，数值越高要求越严格，默认7)
DIFF_VALUE_THRESHOLD=7

# 相似度检测阈值 (0.0-1.0，数值越高越严格，默认0.6)
DIFF_SIMILARITY_THRESHOLD=0.6

# 最大 diff 生成数量（单次对话，默认3）
DIFF_MAX_COUNT=3

# 启用 diff 功能调试日志（development 环境自动启用）
ENABLE_DIFF_DEBUG=true

# 启用性能监控
ENABLE_PERFORMANCE_MONITORING=false

# 高级 Diff 配置
# 启用智能编辑策略（基于内容类型选择最佳插入位置）
ENABLE_SMART_EDITING_STRATEGY=true

# 启用置信度评分（对 diff 质量进行评分）
ENABLE_CONFIDENCE_SCORING=true

# 最小置信度阈值（0.0-1.0，低于此值的 diff 不会生成）
MIN_CONFIDENCE_THRESHOLD=0.5

# Ask Chat Mode Prompt Configuration  
# System prompt for Ask mode (simple Q&A, no diff generation)
OPENAI_ASK_SYSTEM_PROMPT="你是一个智能助手，专门回答用户关于文档内容的问题。请基于提供的原文档内容准确、简洁地回答用户的问题。"

# Note: The OpenAI configuration is used for:
# - Document analysis (/api/analyze-stream) - uses OPENAI_SYSTEM_PROMPT
# - Agent chat mode (/api/agent-chat-stream) - uses OPENAI_AGENT_SYSTEM_PROMPT  
# - Ask chat mode (/api/chat-stream) - uses OPENAI_ASK_SYSTEM_PROMPT
# - Structured notes generation (/api/generate-notes-stream)